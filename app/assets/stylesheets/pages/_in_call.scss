.blocks{
  &:not(.inline){
    display: grid;
  }
  &.inline{
    display: flex;
    flex-wrap: wrap;
    align-items: center;
  }
  .img{
    width: 100%;
    max-height: 300px;
    object-fit: contain;
    object-position: left;
  }
  .link{
    color: blue;
  }
  .list{
    counter-reset: thislist;
    &.numbered{
      content: counter(thislist) ".";
      & > *{
        display: flex;
        &::before{
          counter-increment: thislist;
          content: counter(thislist) ".";
          display: flex;
          justify-content: center;
          align-items: start;
          width: 1em;
          margin-left: 0em;
          margin-right: 0.5rem;
        }
      }
    }
    &.bullet .list-item{
      display: flex;
       &::before{
        content: "â€¢";
        display: flex;
        justify-content: center;
        align-items: start;
        width: 1em;
        margin-left: 0em;
        margin-right: 0.5rem;
      }
    }
  }
}

.blocks.wrapper{
  grid-gap: 32px;
  // &:after{
  //   content: '';
  // }
  .outline{
    grid-gap: 16px;
    &:not(:last-child):after{
      content: '';
      height: 2px;
      background: $light3;
      margin-top: 18px
    }
  }
  .blocks{
    grid-gap: 14px
  }
  .block.d-flex{
    align-items: center;
  }
  input{
    border: none;
    background: transparent;
  }
  input[type="number"]{
    width: 75px;
    text-align: center;
  }
  input[type="number"], input[type="text"], [contenteditable]{
    border-bottom: 1px solid $primary;
    height: fit-content;
    align-self: center;
  }
  .form-field{
    padding: 4px 16px;
    justify-self: end;
    background: white;
    box-shadow: $shadow-soft-primary;
    min-height: 46px;
    max-width: 70%;
    border-radius: 4px;
    &.range{
      grid-gap: unset;
      .range-info{
        display: grid;
        grid-template-columns: 40px auto;
        span{
          text-align: end;
        }
      }
    }
    &.text{
      min-width: 50%;
      span.text[contenteditable]:empty::before {
        content: 'Answer';
        color: rgb(117, 117, 117);
        display: inline-block;
      }
      span.text{
        min-width: 50%;
      }
    }
    &.number{
      position: relative;
      min-width: 100px;
      .width-machine{
        visibility: hidden;
      }
      input[type="number"]{
        position: absolute;
        width: calc(100% - 32px);
        left: 50%;
        transform: translateX(-50%);
      }
    }
  }
}

input[type="date"]{
  position: relative;
}

input[type="date"]::-webkit-calendar-picker-indicator {
    background: transparent;
    bottom: 0;
    color: transparent;
    cursor: pointer;
    height: 20px;
    left: 0;
    position: absolute;
    right: 0;
    top: 0;
    width: auto;
}

input[type=number]::-webkit-outer-spin-button,
input[type=number]::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* Firefox */
input[type=number] {
  -moz-appearance: textfield;
}

input[type="radio"], input[type="checkbox"]{
  appearance: none;
  width: 22px; height: 22px;
}

input[type="radio"]{
  border-radius: 50%;
  transition: box-shadow .3s, background .3s;
  background: white;
}

input[type="checkbox"]{
  border-radius: 2px;
  transition: box-shadow .3s, background .3s;
  background: white;
}

input[type="date" i]::-webkit-calendar-picker-indicator{
  margin-left: 0
}

p.block{
  line-height: 19px;
}

.block{
  input[type="radio"], input[type="checkbox"]{
    &:checked{
      box-shadow: inset 0px 0px 0px 4px $secondary-light1;
    }
    &:not(:checked){
      background: $gray5;
    }
    &:disabled{
      opacity: 0.4;
    }
  }
  input[type="checkbox"]{
    &:checked{
      box-shadow: inset 0px 0px 0px 7px $secondary-light1;
    }
  }
  &:hover{
    input[type="radio"], input[type="checkbox"]{
      &:not(:checked){
        background: $gray4;
      }
      &:checked{
        box-shadow: inset 0px 0px 0px 4px $secondary;
      }
    }
    input[type="checkbox"]{
      &:checked{
        box-shadow: inset 0px 0px 0px 7px $secondary;
      }
    }
  }
  &:focus{
    input[type="radio"], input[type="checkbox"]{
      &:not(:checked){
        box-shadow: inset 0px 0px 0px 4px $gray1;
      }
      &:checked{
        box-shadow: inset 0px 0px 0px 7px $secondary-light1;
      }
    }
  }
}


